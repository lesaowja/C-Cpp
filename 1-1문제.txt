#include <iostream>

void shallow(int &s) {
   s = 4;
}

void deep(int d) {
   d = 5;
}

int main() {
   int a = 3;
   shallow(a);
   std::cout << "shallow 후 a의 값: " << a << std::endl; 
   deep(a);
   std::cout << "deep 후 a의 값: " << a << std::endl; 
   return 0;
}

이 코드의 결과 값은 
shallow 후 a의 값:  4
deep 후 a의 값 : 4
 
&가 붙은 것을 Call-by-Reference라고 하는데 그 경우 a라는 함수를 shallow에 넣을때 &즉 주소값을 가지고 계산을 하기 때문에 a의 값이 변하였던 것 이고

deep은 call-by-value 라고 하는듯 하다 이의 경우 int d는 a를 가져오는것이 아닌 a가 가진 숫자만을 복사해 가져오고 끝나기 때문에 main 에서의 변화가 없었던 것이다.

